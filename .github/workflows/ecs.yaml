name: Deploy to ECS

on:
  push:
    branches:
      - main
env:
  docker_pass: ${{ secrets.DOCKER_PASS }}
  docker_user: ${{ secrets.DOCKER_USERNAME }}
  app_name: ${{ vars.IMAGE_NAME }}
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3        
      - name: Login in DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}
      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Obtener y limpiar la definición de tarea actual
        run: |
          aws ecs describe-task-definition \
            --task-definition MyflaskApp \
            --query 'taskDefinition' \
            --output json > task-def-temp.json

          jq 'del(.status, .revision, .taskDefinitionArn, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-def-temp.json > task-def.json

      - name: Actualizar la definición de tarea con el nuevo tag de imagen
        run: |
          IMAGE_TAG=${{ github.sha }}
          jq --arg IMAGE "tu_usuario/tu_imagen:$IMAGE_TAG" '.containerDefinitions[0].image = $IMAGE' task-def.json > new-task-def.json

      - name: Registrar la nueva definición de tarea
        id: register-task-def
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json > register-task-def.json
          echo "task-def-arn=$(jq -r '.taskDefinition.taskDefinitionArn' register-task-def.json)" >> $GITHUB_OUTPUT

      - name: Actualizar el servicio ECS
        run: |
          aws ecs update-service \
            --cluster MyECSCluster \
            --service MyECSService \
            --task-definition ${{ steps.register-task-def.outputs.task-def-arn }}

